AC_PREREQ(2.60)
AC_INIT

PACKAGE=athena-python
VERSION=1.1

AC_SUBST(PACKAGE)
AC_SUBST(VERSION)

AM_INIT_AUTOMAKE($PACKAGE, $VERSION)
AM_CONFIG_HEADER(config.h)
AC_CONFIG_MACRO_DIR([m4])

AC_SUBST(ACLOCAL_AMFLAGS, "-I m4 -I .")

ATHENA_REQUIRED=1.0

AC_PROG_CC
AC_DISABLE_STATIC
AC_PROG_LIBTOOL

dnl Check for pkgconfig first
AC_CHECK_PROG(HAVE_PKGCONFIG, pkg-config, yes, no)
AC_PATH_PROG(PKG_CONFIG, pkg-config, no)

dnl Check for gtk-doc
GTK_DOC_CHECK(1.9)

dnl Give error and exit if we don't have pkgconfig
if test "x$HAVE_PKGCONFIG" = "xno"; then
  AC_MSG_ERROR(you need to have pkgconfig installed !)
fi

AC_PREFIX_DEFAULT([$(pkg-config --variable=prefix libathena-extension || echo /usr)])

dnl **************************************************
dnl * Check for Python
dnl **************************************************
AM_CHECK_PYTHON_HEADERS(,[AC_MSG_ERROR(could not find Python headers)])
AM_CHECK_PYTHON_LIBS(,[AC_MSG_ERROR(could not find Python lib)])

if test "`pkg-config --variable=datadir pygobject-3.0`" != "" ; then
    PYGOBJECT_VERSION=pygobject-3.0
    PYGOBJECT_MAJOR_VERSION=3
    PYGOBJECT_MINOR_VERSION=0
    PYGOBJECT_MICRO_VERSION=0
else
    PYGOBJECT_VERSION=pygobject-2.0
    PYGOBJECT_MAJOR_VERSION=2
    PYGOBJECT_MINOR_VERSION=28
    PYGOBJECT_MICRO_VERSION=2
fi

PYGOBJECT_REQUIRED=$PYGOBJECT_MAJOR_VERSION.$PYGOBJECT_MINOR_VERSION.$PYGOBJECT_MICRO_VERSION
AC_DEFINE_UNQUOTED(PYGOBJECT_MAJOR_VERSION,[$PYGOBJECT_MAJOR_VERSION], [PyGObject major version.])
AC_DEFINE_UNQUOTED(PYGOBJECT_MINOR_VERSION,[$PYGOBJECT_MINOR_VERSION], [PyGObject minor version.])
AC_DEFINE_UNQUOTED(PYGOBJECT_MICRO_VERSION,[$PYGOBJECT_MICRO_VERSION], [PyGObject micro version.])

PKG_CHECK_MODULES(ATHENA_PYTHON, [$PYGOBJECT_VERSION >= $PYGOBJECT_REQUIRED
                                   libathena-extension >= $ATHENA_REQUIRED])

PYGOBJECT_DATADIR=`$PKG_CONFIG --variable=datadir $PYGOBJECT_VERSION`
AC_SUBST(PYGOBJECT_DATADIR)

ATHENA_LIBDIR=`$PKG_CONFIG --variable=libdir libathena-extension`
AC_SUBST(ATHENA_LIBDIR)
AC_DEFINE_UNQUOTED(ATHENA_LIBDIR, "$ATHENA_LIBDIR", [Athena libdir])

dnl ---------------------------------
dnl Get athena extensions directory
dnl ---------------------------------
ATHENA_EXTENSION_DIR=`$PKG_CONFIG --variable=extensiondir libathena-extension`
AC_SUBST(ATHENA_EXTENSION_DIR)
AC_DEFINE_UNQUOTED(ATHENA_EXTENSION_DIR, "$ATHENA_EXTENSION_DIR", [Athena' extensions directory])

dnl ---------------------------------
dnl Check for gtk-doc dependencies
dnl ---------------------------------
if test "${enable_gtk_doc}" != no; then
    dnl Check for xsltproc
    AC_PATH_PROG([XSLTPROC], [xsltproc])
    if test -z "$XSLTPROC"; then
        echo " disabling generation of docs"
        enable_gtk_doc=no
    fi
fi

AC_OUTPUT([
  Makefile
  examples/Makefile
  src/Makefile
  athena-python.pc
  docs/Makefile
  docs/reference/entities.docbook
])

echo
echo " athena-python $VERSION"
echo
echo "    Athena Prefix: ${prefix}"
echo "  PyGObject Version: ${PYGOBJECT_VERSION}"
echo "      Documentation: ${enable_gtk_doc}"
echo
